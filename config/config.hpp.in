#pragma once

#cmakedefine OS_ENV "@OS_ENV@"

enum OS_t {
    LINUX = 0,
    WINDOWS = 1
};

namespace {

consteval bool str_equals(const char* str1, const char* str2) {
    while (*str1 && *str2) {
        if (*str1 != *str2) {
            return false;
        }
        ++str1;
        ++str2;
    }
    return *str1 == *str2;
}

consteval OS_t reflection() {
    if (str_equals(OS_ENV, "Linux")) {
        return OS_t::LINUX;
    } else if(str_equals(OS_ENV, "Windows")) {
        return OS_t::WINDOWS;
    } else {
        throw "Unsopported OS type";
    }
}

}

struct ENV_CONFIG {
    constexpr ENV_CONFIG(OS_t os) :
        OS(os) {}

    OS_t OS;
};

constexpr auto ENV = ENV_CONFIG { reflection() };
